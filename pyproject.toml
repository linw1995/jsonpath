[tool.poetry]
name = "jsonpath-extractor"
version = "0.7.1"
license = "MIT"
description = "A selector expression for extracting data from JSON."
authors = ["林玮 <linw1995@icloud.com>"]
readme = "README.rst"
homepage = "https://github.com/linw1995/jsonpath"
repository = "https://github.com/linw1995/jsonpath"
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Development Status :: 4 - Beta",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]
include = ["build.py", "jsonpath/lark_parser.py"]
packages = [
  { include = "jsonpath" }
]

[tool.poetry.dependencies]
python = "^3.7"
lark-parser = {version = "^0.8.5", optional = true}
typing_extensions = "^3.7"

black = {version = "^19.3b0", optional = true}
flake8 = {version = "^3.7.8", optional = true}
isort = {version = "^4.3.21", optional = true}
mypy = {version = "^0.750", optional = true}
pytest = {version = "^5.2.0", optional = true}
pytest-cov = {version = "^2.7.1", optional = true}
flake8-bugbear = {version = "^19.8", optional = true}
sphinx = {version = "^2.3.1", optional = true}
blacken-docs = {version = "^1.5.0", optional = true}
doc8 = {version = "^0.8.0", optional = true}
pygments = {version = "^2.5.2", optional = true}
livereload = {version = "^2.6.1", optional = true}
pexpect = {version = "^4.8.0", optional = true}
coverage = {version = "4.5.4", optional = true}
sybil = {version = "^1.3.0", optional = true}

[tool.poetry.dev-dependencies]
rope = {version = "^0.14.0"}
pre-commit = "^1.20"
nox = "^2019.11.9"
lark-parser = "^0.8.5"
coverage = {version = "4.5.4"}

[tool.poetry.extras]
lint = [
  "black", "blacken-docs",
  "doc8",
  "flake8", "flake8-bugbear",
  "isort",
  "livereload", "lark-parser",
  "mypy",
  "pygments", "pytest", "pexpect", "sybil"]
test = ["pytest", "pytest-cov", "coverage", "pexpect", "sybil"]
lark-parser = ["lark-parser"]
docs = ["sphinx", "livereload", "lark-parser"]

[tool.poetry.scripts]
jp = 'jsonpath.cli:main'

[tool.black]
line-length = 80
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.intreehooks]
build-backend = "build"

[build-system]
requires = ["intreehooks", "poetry", "lark-parser==0.8.9"]
build-backend = "intreehooks:loader"
