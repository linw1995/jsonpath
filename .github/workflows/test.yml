name: Lint&Test

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Cache PIP
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-3.7-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.7-
          ${{ runner.os }}-pip-
    - name: Cache Poetry Virtualenvs
      uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-3.7-${{ hashFiles('**/poetry.lock') }}
    - name: Cache pre-commit
      uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-3.7-${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        make POETRY_EXTRAS=lint init_by_poetry
    - name: Lint
      run: |
        make check-all

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache PIP
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    - name: Cache Poetry Virtualenvs
      uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        make POETRY_EXTRAS= init_by_poetry
    - name: Cache Nox Virtualenvs
      uses: actions/cache@v1
      with:
        path: .nox
        key: ${{ runner.os }}-nox-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Test by nox
      run: |
        make nox
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.5
      with:
        # Repository upload token - get it from codecov.io
        token: ${{ secrets.CODECOV_TOKEN }}
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: true
